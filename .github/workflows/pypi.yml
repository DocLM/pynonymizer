name: PyPI

on:
  push:
  schedule:
    - cron: "0 2 * * 0"

jobs:
  test-py36:
    runs-on: ubuntu-latest
    container: python:3.6-buster
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        apt-get update
        apt-get install -y unixodbc-dev
        pip install . .[mssql] pytest
    - name: Run Unit Tests
      run: pytest tests/
  test-py37:
    runs-on: ubuntu-latest
    container: python:3.7-buster
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        apt-get update
        apt-get install -y unixodbc-dev
        pip install . .[mssql] pytest
    - name: Run Unit Tests
      run: pytest tests/
  test-py38:
    runs-on: ubuntu-latest
    container: python:3.8-buster
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        apt-get update
        apt-get install -y unixodbc-dev
        pip install . .[mssql] pytest
    - name: Run Unit Tests
      run: pytest tests/

  integration-mysql: 
    runs-on: ubuntu-latest
    container: python:3.8-buster
    env:
      PYNONYMIZER_DB_USER: root
      PYNONYMIZER_DB_PASSWORD: password
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y mariadb-server
          service mysql start
          mysql -u root -e "ALTER USER 'root'@'localhost' IDENTIFIED BY 'password';"
          pip install . pytest
      - run: pytest tests_integration

  package: 
    runs-on: ubuntu-latest
    container: python:3.8-buster
    needs: 
      - test-py36
      - test-py37
      - test-py38
      - integration-mysql
    steps:
    - uses: actions/checkout@v2
    - name: Install package tools
      run: pip install twine
    - run: python setup.py sdist bdist_wheel
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  upload: 
    if: startsWith(github.ref, 'refs/tags/v')
    needs: 
      - package
    runs-on: ubuntu-latest
    container: python:3.8-buster
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Install package tools
      run: pip install twine
    - run: twine upload dist/*
      env:
        TWINE_USERNAME: ${{secrets.PYPI_USERNAME}}
        TWINE_PASSWORD: ${{secrets.PYPI_PASSWORD}}