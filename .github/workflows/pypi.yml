name: PyPI

on:
  push:
  pull_request:
  schedule:
    - cron: "0 2 * * 0"

jobs:
  test:
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]

    runs-on: ubuntu-latest
    container: python:${{matrix.python}}-buster
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          apt-get update
          apt-get install -y unixodbc-dev
          pip install . .[mssql] pytest
      - name: Run Unit Tests
        run: pytest tests/

  integration-mysql: 
    services:
      mysql:
        image: mysql
        env:
            MYSQL_ROOT_PASSWORD: password
        ports:
            - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    runs-on: ubuntu-latest
    container: python:3.8-buster
    env:
      PYNONYMIZER_DB_HOST: mysql
      PYNONYMIZER_DB_USER: root
      PYNONYMIZER_DB_PASSWORD: password
    steps:
      - uses: actions/checkout@v2
      - name: Setup
        run: |
          apt-get update
          apt-get install -y mysql-client
          pip install . pytest
      - run: pytest tests_integration/mysql
      - uses: actions/upload-artifact@v2
        with:
          name: integration_output
          path: |
            tests_integration/stdout.sql
            tests_integration/basic.sql


  package: 
    runs-on: ubuntu-latest
    container: python:3.8-buster
    needs: 
      - test
      - integration-mysql
    steps:
    - uses: actions/checkout@v2
    - name: Install package tools
      run: pip install twine
    - run: python setup.py sdist bdist_wheel
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist

  upload: 
    if: startsWith(github.ref, 'refs/tags/v')
    needs: 
      - package
    runs-on: ubuntu-latest
    container: python:3.8-buster
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Install package tools
      run: pip install twine
    - run: twine upload dist/*
      env:
        TWINE_USERNAME: ${{secrets.PYPI_USERNAME}}
        TWINE_PASSWORD: ${{secrets.PYPI_PASSWORD}}
